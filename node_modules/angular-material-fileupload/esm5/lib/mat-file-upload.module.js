/**
 * @fileoverview added by tsickle
 * Generated from: lib/mat-file-upload.module.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from "@angular/core";
import { BytesPipe } from "./bytes/bytes.pipe";
import { MatIconModule } from '@angular/material/icon';
import { MatProgressBarModule } from '@angular/material/progress-bar';
import { MatCardModule } from '@angular/material/card';
import { MatButtonModule } from '@angular/material/button';
import { CommonModule } from "@angular/common";
import { HttpClientModule } from "@angular/common/http";
import { MatFileUploadQueueComponent } from "./mat-file-upload-queue/mat-file-upload-queue.component";
import { MatFileUploadComponent } from "./mat-file-upload/mat-file-upload.component";
import { FileUploadInputForDirective } from "./file-upload-input-for/file-upload-input-for.directive";
var MatFileUploadModule = /** @class */ (function () {
    function MatFileUploadModule() {
    }
    MatFileUploadModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        BytesPipe,
                        MatFileUploadQueueComponent,
                        MatFileUploadComponent,
                        FileUploadInputForDirective,
                    ],
                    imports: [
                        MatProgressBarModule,
                        MatCardModule,
                        MatButtonModule,
                        MatIconModule,
                        HttpClientModule,
                        CommonModule,
                    ],
                    exports: [
                        BytesPipe,
                        MatFileUploadQueueComponent,
                        MatFileUploadComponent,
                        FileUploadInputForDirective,
                    ],
                },] }
    ];
    return MatFileUploadModule;
}());
export { MatFileUploadModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LWZpbGUtdXBsb2FkLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItbWF0ZXJpYWwtZmlsZXVwbG9hZC8iLCJzb3VyY2VzIjpbImxpYi9tYXQtZmlsZS11cGxvYWQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDL0MsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGdDQUFnQyxDQUFDO0FBQ3RFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN2RCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDM0QsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHNCQUFzQixDQUFDO0FBQ3hELE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHlEQUF5RCxDQUFDO0FBQ3RHLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDZDQUE2QyxDQUFDO0FBQ3JGLE9BQU8sRUFBRSwyQkFBMkIsRUFBRSxNQUFNLHlEQUF5RCxDQUFDO0FBRXRHO0lBQUE7SUFzQmtDLENBQUM7O2dCQXRCbEMsUUFBUSxTQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWixTQUFTO3dCQUNULDJCQUEyQjt3QkFDM0Isc0JBQXNCO3dCQUN0QiwyQkFBMkI7cUJBQzVCO29CQUNELE9BQU8sRUFBRTt3QkFDUCxvQkFBb0I7d0JBQ3BCLGFBQWE7d0JBQ2IsZUFBZTt3QkFDZixhQUFhO3dCQUNiLGdCQUFnQjt3QkFDaEIsWUFBWTtxQkFDYjtvQkFDRCxPQUFPLEVBQUU7d0JBQ1AsU0FBUzt3QkFDVCwyQkFBMkI7d0JBQzNCLHNCQUFzQjt3QkFDdEIsMkJBQTJCO3FCQUM1QjtpQkFDRjs7SUFDaUMsMEJBQUM7Q0FBQSxBQXRCbkMsSUFzQm1DO1NBQXRCLG1CQUFtQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEJ5dGVzUGlwZSB9IGZyb20gXCIuL2J5dGVzL2J5dGVzLnBpcGVcIjtcbmltcG9ydCB7IE1hdEljb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9pY29uJztcbmltcG9ydCB7IE1hdFByb2dyZXNzQmFyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvcHJvZ3Jlc3MtYmFyJztcbmltcG9ydCB7IE1hdENhcmRNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9tYXRlcmlhbC9jYXJkJztcbmltcG9ydCB7IE1hdEJ1dHRvbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL21hdGVyaWFsL2J1dHRvbic7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29tbW9uXCI7XG5pbXBvcnQgeyBIdHRwQ2xpZW50TW9kdWxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vbi9odHRwXCI7XG5pbXBvcnQgeyBNYXRGaWxlVXBsb2FkUXVldWVDb21wb25lbnQgfSBmcm9tIFwiLi9tYXQtZmlsZS11cGxvYWQtcXVldWUvbWF0LWZpbGUtdXBsb2FkLXF1ZXVlLmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgTWF0RmlsZVVwbG9hZENvbXBvbmVudCB9IGZyb20gXCIuL21hdC1maWxlLXVwbG9hZC9tYXQtZmlsZS11cGxvYWQuY29tcG9uZW50XCI7XG5pbXBvcnQgeyBGaWxlVXBsb2FkSW5wdXRGb3JEaXJlY3RpdmUgfSBmcm9tIFwiLi9maWxlLXVwbG9hZC1pbnB1dC1mb3IvZmlsZS11cGxvYWQtaW5wdXQtZm9yLmRpcmVjdGl2ZVwiO1xuXG5ATmdNb2R1bGUoe1xuICBkZWNsYXJhdGlvbnM6IFtcbiAgICBCeXRlc1BpcGUsXG4gICAgTWF0RmlsZVVwbG9hZFF1ZXVlQ29tcG9uZW50LFxuICAgIE1hdEZpbGVVcGxvYWRDb21wb25lbnQsXG4gICAgRmlsZVVwbG9hZElucHV0Rm9yRGlyZWN0aXZlLFxuICBdLFxuICBpbXBvcnRzOiBbXG4gICAgTWF0UHJvZ3Jlc3NCYXJNb2R1bGUsXG4gICAgTWF0Q2FyZE1vZHVsZSxcbiAgICBNYXRCdXR0b25Nb2R1bGUsXG4gICAgTWF0SWNvbk1vZHVsZSxcbiAgICBIdHRwQ2xpZW50TW9kdWxlLFxuICAgIENvbW1vbk1vZHVsZSxcbiAgXSxcbiAgZXhwb3J0czogW1xuICAgIEJ5dGVzUGlwZSxcbiAgICBNYXRGaWxlVXBsb2FkUXVldWVDb21wb25lbnQsXG4gICAgTWF0RmlsZVVwbG9hZENvbXBvbmVudCxcbiAgICBGaWxlVXBsb2FkSW5wdXRGb3JEaXJlY3RpdmUsXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIE1hdEZpbGVVcGxvYWRNb2R1bGUge31cbiJdfQ==