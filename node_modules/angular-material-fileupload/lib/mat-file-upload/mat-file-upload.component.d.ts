import { OnInit, OnDestroy, EventEmitter } from "@angular/core";
import { Subscription } from "rxjs";
import { HttpHeaders, HttpParams, HttpClient } from "@angular/common/http";
import { MatFileUploadQueueService } from "../mat-file-upload-queue/mat-file-upload-queue.service";
import { IUploadProgress } from "../mat-file-upload.type";
import * as ɵngcc0 from '@angular/core';
export declare class MatFileUploadComponent implements OnInit, OnDestroy {
    private HttpClient;
    private matFileUploadQueueService;
    private uploadProgressSubject;
    uploadProgress$: import("rxjs").Observable<IUploadProgress>;
    private uploadInProgressSubject;
    uploadInProgress$: import("rxjs").Observable<boolean>;
    subs: Subscription;
    httpUrl: string;
    httpRequestHeaders: HttpHeaders | {
        [header: string]: string | string[];
    };
    httpRequestParams: HttpParams | {
        [param: string]: string | string[];
    };
    fileAlias: string;
    private _file;
    private _id;
    file: any;
    id: number;
    fileUploadAriaLabel: string;
    cancelAriaLabel: string;
    /** Output  */
    removeEvent: EventEmitter<MatFileUploadComponent>;
    onUpload: EventEmitter<any>;
    private fileUploadSubscription;
    constructor(HttpClient: HttpClient, matFileUploadQueueService: MatFileUploadQueueService);
    ngOnInit(): void;
    upload(): void;
    remove(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<MatFileUploadComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<MatFileUploadComponent, "mat-file-upload", never, {
    "fileUploadAriaLabel": "fileUploadAriaLabel";
    "cancelAriaLabel": "cancelAriaLabel";
    "httpUrl": "httpUrl";
    "httpRequestHeaders": "httpRequestHeaders";
    "httpRequestParams": "httpRequestParams";
    "fileAlias": "fileAlias";
    "file": "file";
    "id": "id";
}, {
    "removeEvent": "removeEvent";
    "onUpload": "onUpload";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWF0LWZpbGUtdXBsb2FkLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJtYXQtZmlsZS11cGxvYWQuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztBQUtBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUErQkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkluaXQsIE9uRGVzdHJveSwgRXZlbnRFbWl0dGVyIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IFN1YnNjcmlwdGlvbiB9IGZyb20gXCJyeGpzXCI7XG5pbXBvcnQgeyBIdHRwSGVhZGVycywgSHR0cFBhcmFtcywgSHR0cENsaWVudCB9IGZyb20gXCJAYW5ndWxhci9jb21tb24vaHR0cFwiO1xuaW1wb3J0IHsgTWF0RmlsZVVwbG9hZFF1ZXVlU2VydmljZSB9IGZyb20gXCIuLi9tYXQtZmlsZS11cGxvYWQtcXVldWUvbWF0LWZpbGUtdXBsb2FkLXF1ZXVlLnNlcnZpY2VcIjtcbmltcG9ydCB7IElVcGxvYWRQcm9ncmVzcyB9IGZyb20gXCIuLi9tYXQtZmlsZS11cGxvYWQudHlwZVwiO1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTWF0RmlsZVVwbG9hZENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIEh0dHBDbGllbnQ7XG4gICAgcHJpdmF0ZSBtYXRGaWxlVXBsb2FkUXVldWVTZXJ2aWNlO1xuICAgIHByaXZhdGUgdXBsb2FkUHJvZ3Jlc3NTdWJqZWN0O1xuICAgIHVwbG9hZFByb2dyZXNzJDogaW1wb3J0KFwicnhqc1wiKS5PYnNlcnZhYmxlPElVcGxvYWRQcm9ncmVzcz47XG4gICAgcHJpdmF0ZSB1cGxvYWRJblByb2dyZXNzU3ViamVjdDtcbiAgICB1cGxvYWRJblByb2dyZXNzJDogaW1wb3J0KFwicnhqc1wiKS5PYnNlcnZhYmxlPGJvb2xlYW4+O1xuICAgIHN1YnM6IFN1YnNjcmlwdGlvbjtcbiAgICBodHRwVXJsOiBzdHJpbmc7XG4gICAgaHR0cFJlcXVlc3RIZWFkZXJzOiBIdHRwSGVhZGVycyB8IHtcbiAgICAgICAgW2hlYWRlcjogc3RyaW5nXTogc3RyaW5nIHwgc3RyaW5nW107XG4gICAgfTtcbiAgICBodHRwUmVxdWVzdFBhcmFtczogSHR0cFBhcmFtcyB8IHtcbiAgICAgICAgW3BhcmFtOiBzdHJpbmddOiBzdHJpbmcgfCBzdHJpbmdbXTtcbiAgICB9O1xuICAgIGZpbGVBbGlhczogc3RyaW5nO1xuICAgIHByaXZhdGUgX2ZpbGU7XG4gICAgcHJpdmF0ZSBfaWQ7XG4gICAgZmlsZTogYW55O1xuICAgIGlkOiBudW1iZXI7XG4gICAgZmlsZVVwbG9hZEFyaWFMYWJlbDogc3RyaW5nO1xuICAgIGNhbmNlbEFyaWFMYWJlbDogc3RyaW5nO1xuICAgIC8qKiBPdXRwdXQgICovXG4gICAgcmVtb3ZlRXZlbnQ6IEV2ZW50RW1pdHRlcjxNYXRGaWxlVXBsb2FkQ29tcG9uZW50PjtcbiAgICBvblVwbG9hZDogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgcHJpdmF0ZSBmaWxlVXBsb2FkU3Vic2NyaXB0aW9uO1xuICAgIGNvbnN0cnVjdG9yKEh0dHBDbGllbnQ6IEh0dHBDbGllbnQsIG1hdEZpbGVVcGxvYWRRdWV1ZVNlcnZpY2U6IE1hdEZpbGVVcGxvYWRRdWV1ZVNlcnZpY2UpO1xuICAgIG5nT25Jbml0KCk6IHZvaWQ7XG4gICAgdXBsb2FkKCk6IHZvaWQ7XG4gICAgcmVtb3ZlKCk6IHZvaWQ7XG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcbn1cbiJdfQ==