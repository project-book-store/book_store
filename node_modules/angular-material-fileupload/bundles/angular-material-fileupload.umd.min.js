!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/material/icon"),require("@angular/material/progress-bar"),require("@angular/material/card"),require("@angular/material/button"),require("@angular/common"),require("@angular/common/http"),require("rxjs"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("angular-material-fileupload",["exports","@angular/core","@angular/material/icon","@angular/material/progress-bar","@angular/material/card","@angular/material/button","@angular/common","@angular/common/http","rxjs","rxjs/operators"],t):t((e=e||self)["angular-material-fileupload"]={},e.ng.core,e.ng.material.icon,e.ng.material["progress-bar"],e.ng.material.card,e.ng.material.button,e.ng.common,e.ng.common.http,e.rxjs,e.rxjs.operators)}(this,(function(e,t,r,n,o,a,i,l,s,u){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */function p(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,o,a=r.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(n=a.next()).done;)i.push(n.value)}catch(e){o={error:e}}finally{try{n&&!n.done&&(r=a.return)&&r.call(a)}finally{if(o)throw o.error}}return i}var c=function(){function e(){}return e.prototype.transform=function(e){if(isNaN(parseFloat(""+e))||!isFinite(e))return"-";if(e<=0)return"0";var t=Math.floor(Math.log(e)/Math.log(1024));return(e/Math.pow(1024,Math.floor(t))).toFixed(1)+" "+["bytes","KB","MB","GB","TB","PB"][t]},e.decorators=[{type:t.Pipe,args:[{name:"bytes"}]}],e}(),h=function(){function e(){this.inputValueSubject=new s.BehaviorSubject(null),this.inputValue$=this.inputValueSubject.asObservable()}return e.prototype.initialize=function(e){this.inputValueSubject.next(e)},e.prototype.getInputValue=function(){return this.inputValueSubject.getValue()},e.decorators=[{type:t.Injectable}],e}();var d=function(){function e(e,r){this.HttpClient=e,this.matFileUploadQueueService=r,this.uploadProgressSubject=new s.ReplaySubject,this.uploadProgress$=this.uploadProgressSubject.asObservable(),this.uploadInProgressSubject=new s.BehaviorSubject(!1),this.uploadInProgress$=this.uploadInProgressSubject.asObservable(),this.subs=new s.Subscription,this.fileUploadAriaLabel="File Upload",this.cancelAriaLabel="Cancel File Upload",this.removeEvent=new t.EventEmitter,this.onUpload=new t.EventEmitter;var n=this.matFileUploadQueueService.getInputValue();n&&(this.httpUrl=this.httpUrl||n.httpUrl,this.httpRequestHeaders=this.httpRequestHeaders||n.httpRequestHeaders,this.httpRequestParams=this.httpRequestParams||n.httpRequestParams,this.fileAlias=this.fileAlias||n.fileAlias)}return Object.defineProperty(e.prototype,"file",{get:function(){return this._file},set:function(e){this._file=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"id",{get:function(){return this._id},set:function(e){this._id=e},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){this.uploadProgressSubject.next({progressPercentage:0,loaded:0,total:this._file.size})},e.prototype.upload=function(){var e=this;this.uploadInProgressSubject.next(!0);var t=new FormData;t.set(this.fileAlias,this._file,this._file.name),this.subs.add(this.HttpClient.post(this.httpUrl,t,{headers:this.httpRequestHeaders,observe:"events",params:this.httpRequestParams,reportProgress:!0,responseType:"json"}).subscribe((function(t){t.type===l.HttpEventType.UploadProgress&&e.uploadProgressSubject.next({progressPercentage:Math.floor(100*t.loaded/t.total),loaded:t.loaded,total:t.total}),e.onUpload.emit({file:e._file,event:t})}),(function(t){e.fileUploadSubscription&&e.fileUploadSubscription.unsubscribe(),e.uploadInProgressSubject.next(!1),e.onUpload.emit({file:e._file,event:event})}),(function(){return e.uploadInProgressSubject.next(!1)})))},e.prototype.remove=function(){this.subs.unsubscribe(),this.removeEvent.emit(this)},e.prototype.ngOnDestroy=function(){this.subs.unsubscribe()},e.decorators=[{type:t.Component,args:[{selector:"mat-file-upload",template:'<ng-container *ngIf="uploadProgress$ | async as uploadProgress">\n  <mat-card>\n    <span class="file-summary">{{ file.name }}({{ file.size | bytes }})</span>\n    <div class="upload-progress">\n      <mat-progress-bar\n        [value]="uploadProgress.progressPercentage"\n      ></mat-progress-bar>\n\n      <button\n        mat-icon-button\n        [attr.aria-label]="fileUploadAriaLabel"\n        (click)="upload()"\n        [disabled]="uploadInProgress$ | async"\n      >\n        <mat-icon>file_upload</mat-icon>\n      </button>\n\n      <button\n        mat-icon-button\n        [attr.aria-label]="cancelAriaLabel"\n        (click)="remove()"\n      >\n        <mat-icon>cancel</mat-icon>\n      </button>\n    </div>\n    <span class="file-summary">{{ uploadProgress.progressPercentage }}%</span>\n    <span>\n      {{ uploadProgress.loaded | bytes }} of\n      {{ uploadProgress.total | bytes }}</span\n    >\n  </mat-card>\n</ng-container>\n',changeDetection:t.ChangeDetectionStrategy.OnPush,styles:[".file-summary{font-size:.85rem}.upload-progress{display:flex;align-content:center;align-items:center;height:10px}.upload-progress ::ng-deep .mat-progress-bar .mat-progress-bar-element{transition:none}"]}]}],e.ctorParameters=function(){return[{type:l.HttpClient},{type:h}]},e.propDecorators={httpUrl:[{type:t.Input}],httpRequestHeaders:[{type:t.Input}],httpRequestParams:[{type:t.Input}],fileAlias:[{type:t.Input}],file:[{type:t.Input}],id:[{type:t.Input}],fileUploadAriaLabel:[{type:t.Input}],cancelAriaLabel:[{type:t.Input}],removeEvent:[{type:t.Output}],onUpload:[{type:t.Output}]},e}();var f=function(){function e(e,t){this.matFileUploadQueueService=e,this.changeDetectorRef=t,this.files=[],this.httpRequestHeaders=new l.HttpHeaders,this.httpRequestParams=new l.HttpParams,this.fileAlias="file",this.uploadAllColor="primary",this.uploadAllLabel="Upload All",this.removeAllColor="primary",this.removeAllLabel="Remove All"}return Object.defineProperty(e.prototype,"fileUploadRemoveEvents",{get:function(){return s.merge.apply(void 0,function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(p(arguments[t]));return e}(this.fileUploads.map((function(e){return e.removeEvent}))))},enumerable:!0,configurable:!0}),e.prototype.ngOnChanges=function(e){this.matFileUploadQueueService.initialize({httpUrl:e.httpUrl?e.httpUrl.currentValue:void 0,httpRequestHeaders:e.httpRequestHeaders?e.httpRequestHeaders.currentValue:void 0,httpRequestParams:e.httpRequestParams?e.httpRequestParams.currentValue:void 0,fileAlias:e.fileAlias?e.fileAlias.currentValue:void 0})},e.prototype.ngAfterViewInit=function(){var e=this;this._changeSubscription=this.fileUploads.changes.pipe(u.startWith(null)).subscribe((function(){e._fileRemoveSubscription&&e._fileRemoveSubscription.unsubscribe(),e._listenTofileRemoved()}))},e.prototype._listenTofileRemoved=function(){var e=this;this._fileRemoveSubscription=this.fileUploadRemoveEvents.subscribe((function(t){e.files.splice(t.id,1),e.changeDetectorRef.markForCheck()}))},e.prototype.add=function(e){this.files.push(e),this.changeDetectorRef.markForCheck()},e.prototype.uploadAll=function(){this.fileUploads.forEach((function(e){e.upload()}))},e.prototype.removeAll=function(){this.files.splice(0,this.files.length),this.changeDetectorRef.markForCheck()},e.prototype.ngOnDestroy=function(){this._changeSubscription&&this._changeSubscription.unsubscribe(),this._fileRemoveSubscription&&this._fileRemoveSubscription.unsubscribe(),this.files&&this.removeAll()},e.decorators=[{type:t.Component,args:[{selector:"mat-file-upload-queue",template:'<ng-content></ng-content>\n<br />\n<button\n  mat-raised-button\n  [color]="uploadAllColor"\n  *ngIf="files.length > 0"\n  (click)="uploadAll()"\n>\n  {{ uploadAllLabel }}\n</button>\n<button\n  mat-raised-button\n  [color]="removeAllColor"\n  *ngIf="files.length > 0"\n  (click)="removeAll()"\n>\n  {{ removeAllLabel }}\n</button>\n',changeDetection:t.ChangeDetectionStrategy.OnPush,providers:[h],styles:[""]}]}],e.ctorParameters=function(){return[{type:h},{type:t.ChangeDetectorRef}]},e.propDecorators={fileUploads:[{type:t.ContentChildren,args:[t.forwardRef((function(){return d}))]}],httpUrl:[{type:t.Input}],httpRequestHeaders:[{type:t.Input}],httpRequestParams:[{type:t.Input}],fileAlias:[{type:t.Input}],uploadAllColor:[{type:t.Input}],uploadAllLabel:[{type:t.Input}],removeAllColor:[{type:t.Input}],removeAllLabel:[{type:t.Input}]},e}();var m=function(){function e(e){this.element=e,this._queue=null,this.onFileSelected=new t.EventEmitter,this._element=this.element.nativeElement}return Object.defineProperty(e.prototype,"fileUploadQueue",{set:function(e){e&&(this._queue=e)},enumerable:!0,configurable:!0}),e.prototype.onChange=function(){var e=this.element.nativeElement.files;this.onFileSelected.emit(e);for(var t=0;t<e.length;t++)this._queue.add(e[t]);this.element.nativeElement.value=""},e.prototype.onDrop=function(e){var t=e.dataTransfer.files;this.onFileSelected.emit(t);for(var r=0;r<t.length;r++)this._queue.add(t[r]);e.preventDefault(),e.stopPropagation(),this.element.nativeElement.value=""},e.prototype.onDropOver=function(e){e.preventDefault()},e.decorators=[{type:t.Directive,args:[{selector:"input[fileUploadInputFor], div[fileUploadInputFor]"}]}],e.ctorParameters=function(){return[{type:t.ElementRef}]},e.propDecorators={onFileSelected:[{type:t.Output}],fileUploadQueue:[{type:t.Input,args:["fileUploadInputFor"]}],onChange:[{type:t.HostListener,args:["change"]}],onDrop:[{type:t.HostListener,args:["drop",["$event"]]}],onDropOver:[{type:t.HostListener,args:["dragover",["$event"]]}]},e}();var g=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[c,f,d,m],imports:[n.MatProgressBarModule,o.MatCardModule,a.MatButtonModule,r.MatIconModule,l.HttpClientModule,i.CommonModule],exports:[c,f,d,m]}]}],e}();e.FileUploadInputForDirective=m,e.MatFileUploadComponent=d,e.MatFileUploadModule=g,e.MatFileUploadQueueComponent=f,e.ɵa=c,e.ɵb=h,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=angular-material-fileupload.umd.min.js.map